<?xml version="1.0"?>
<launch>
  <!-- 1. Виртуальное время -->
  <param name="use_sim_time" value="true"/>

  <!-- 2. MAVROS SITL -->
  <include file="$(find mavros)/launch/apm.launch">
    <arg name="fcu_url" value="udp://:14550@127.0.0.1:14557"/>
  </include>

  <!-- 3. Загрузка URDF -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find basic_nav)/urdf/drone_urdf.urdf'"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="state_publisher" output="screen">
    <param name="publish_frequency" value="20.0"/>
  </node>

  <!-- 4. Исправление карты -->
  <node pkg="basic_nav" type="fix_map.py" name="map_fixer" output="screen">
    <param name="use_fixed_origin" value="true"/>
    <!-- Важно: устанавливаем начало карты в (-100, -100), чтобы точка (50, 50) была внутри карты -->
    <param name="origin_x" value="-100.0"/>
    <param name="origin_y" value="-100.0"/>
    <param name="map_size" value="200.0"/>
  </node>
  
  <!-- 5. Загрузка карты -->
  <node pkg="map_server" type="map_server" name="map_server"
        args="$(find basic_nav)/maps/my_map.yaml"/>
        
  <!-- 6. Перенаправление топиков карты -->
  <node pkg="topic_tools" type="relay" name="map_relay"
        args="/fixed_map /map" />

  <!-- 7. Статический трансформ map -> odom -->
  <node pkg="tf" type="static_transform_publisher" name="static_map_to_odom"
        args="0 0 0 0 0 0 map odom 100"
        launch-prefix="bash -c 'sleep 1; $0 $@'" />

  <!-- 8. Статический трансформ odom -> base_link (временно для инициализации) -->
  <node pkg="tf" type="static_transform_publisher" name="initial_pose_tf"
        args="0.0 0.0 0 0 0 0 odom base_link 100"
        launch-prefix="bash -c 'sleep 1; $0 $@'" />
        
  <!-- 9. Синхронизация координат с улучшенными параметрами -->
  <node pkg="basic_nav" type="coordinate_sync.py" name="coordinate_sync" output="screen">
    <param name="use_mavros" value="true"/>
    <param name="use_odom" value="true"/>
    <param name="publish_tf" value="true"/>
    <param name="sync_rate" value="20.0"/>
  </node>
  
  <!-- 10. AMCL с улучшенными параметрами -->
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <param name="use_map_topic" value="true"/>
    <param name="base_frame_id" value="base_link"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="global_frame_id" value="map"/>
    <param name="transform_tolerance" value="2.0"/>
    <param name="update_min_d" value="0.1"/>
    <param name="update_min_a" value="0.1"/>
    <param name="min_particles" value="2000"/>
    <param name="max_particles" value="10000"/>
    <param name="recovery_alpha_slow" value="0.0005"/>
    <param name="recovery_alpha_fast" value="0.1"/>
    <!-- Устанавливаем начальную позицию в центр карты -->
    <param name="initial_pose_x" value="0.0"/>
    <param name="initial_pose_y" value="0.0"/>
    <param name="initial_pose_a" value="0.0"/>
    <param name="initial_cov_xx" value="10.0"/>
    <param name="initial_cov_yy" value="10.0"/>
    <param name="initial_cov_aa" value="3.14"/>
    <rosparam file="$(find basic_nav)/config/amcl_params.yaml" command="load"/>
  </node>

  <!-- 11. Статический трансформ base_link -> lidar_link -->
  <node pkg="tf" type="static_transform_publisher" name="base_to_lidar"
        args="0 0 0.2 0 0 0 base_link lidar_link 100"
        launch-prefix="bash -c 'sleep 1; $0 $@'" />

  <!-- 12. Ретрансляция лидара с улучшенной производительностью -->
  <node pkg="topic_tools" type="relay" name="scan_relay"
        args="/drone1/scan /scan" output="screen">
    <param name="queue_size" value="20"/>
    <param name="unreliable" value="true"/>
  </node>

  <!-- 13. Move Base с улучшенными параметрами -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen" respawn="true">
    <!-- Параметры карт стоимости прямо в launch-файле -->
    <rosparam>
      global_costmap:
        global_frame: map
        robot_base_frame: base_link
        update_frequency: 5.0
        publish_frequency: 2.0
        static_map: true
        transform_tolerance: 2.0
        width: 200.0
        height: 200.0
        origin_x: -100.0
        origin_y: -100.0
        resolution: 0.05
        plugins:
          - {name: static_layer, type: "costmap_2d::StaticLayer"}
          - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
          - {name: inflation_layer, type: "costmap_2d::InflationLayer"}
      
      local_costmap:
        global_frame: odom
        robot_base_frame: base_link
        update_frequency: 10.0
        publish_frequency: 5.0
        static_map: false
        rolling_window: true
        width: 10.0
        height: 10.0
        resolution: 0.05
        transform_tolerance: 1.0
        origin_x: -5.0
        origin_y: -5.0
        plugins:
          - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
          - {name: inflation_layer, type: "costmap_2d::InflationLayer"}
    </rosparam>
    
    <rosparam file="$(find basic_nav)/config/base_local_planner.yaml" command="load"/>
    <rosparam file="$(find basic_nav)/config/recovery_behaviors.yaml" command="load"/>
    <param name="planner_frequency" value="5.0"/>
    <param name="controller_frequency" value="15.0"/>
    <param name="base_global_planner" value="navfn/NavfnROS"/>
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
    <param name="recovery_behavior_enabled" value="true"/>
    <param name="clearing_rotation_allowed" value="true"/>
    <param name="conservative_reset_dist" value="0.5"/>
    <param name="oscillation_timeout" value="10.0"/>
    <param name="oscillation_distance" value="0.5"/>
    <remap from="cmd_vel" to="/cmd_vel"/>
  </node>

  <!-- 14. Отладчик карты стоимости -->
  <node name="debug_costmap" pkg="basic_nav" type="debug_costmap.py" output="screen">
    <param name="map_center_x" value="0.0"/>
    <param name="map_center_y" value="0.0"/>
  </node>

  <!-- 15. Улучшенный глобальный планировщик -->
  <node pkg="basic_nav" type="global_planner_fixed.py" name="global_planner" output="screen">
    <param name="plan_frequency" value="2.0"/>
    <param name="altitude" value="1.5"/>
    <param name="use_markers" value="true"/>
  </node>

  <!-- 16. Улучшенный локальный планировщик с избеганием препятствий -->
  <node pkg="basic_nav" type="local_planner.py" name="local_planner" output="screen">
    <param name="obstacle_threshold" value="1.2"/>
    <param name="safety_distance" value="0.8"/>
    <param name="max_linear_speed" value="0.6"/>
    <param name="max_angular_speed" value="0.8"/>
    <param name="look_ahead_distance" value="1.2"/>
    <param name="use_vector_field" value="true"/>
    <param name="debug_visualization" value="true"/>
    <rosparam file="$(find basic_nav)/config/local_planner_params.yaml" command="load"/>
  </node>

  <!-- 17. Модуль преобразования плана в setpoint-команды для MAVROS -->
  <node pkg="basic_nav" type="path_to_setpoint.py" name="path_to_setpoint" output="screen">
    <param name="use_custom_planner" value="true"/>
    <param name="waypoint_radius" value="0.5"/>
    <param name="altitude" value="1.5"/>
    <param name="takeoff_height" value="2.0"/>
    <param name="takeoff_min_alt" value="1.0"/>
    <param name="wait_for_position" value="true"/>
    <param name="position_timeout" value="60.0"/>
  </node>

  <!-- 18. Инициализация дрона и установка начальной позиции -->
  <node pkg="basic_nav" type="init_pose.py" name="drone_initializer" output="screen">
    <param name="map_center_x" value="0.0"/>
    <param name="map_center_y" value="0.0"/>
    <param name="takeoff_altitude" value="2.0"/>
    <param name="arm_timeout" value="60.0"/>
    <param name="publish_initial_pose" value="true"/>
  </node>

  <!-- 19. RViz с улучшенной конфигурацией -->
  <node pkg="rviz" type="rviz" name="rviz"
        args="-d $(find basic_nav)/rviz/drone_navigation.rviz"/>
</launch> 